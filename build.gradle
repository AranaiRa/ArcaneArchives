buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.0.+', changing: true
    }
}
plugins {
    id 'com.github.johnrengelman.shadow' version '5.2.0'
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'maven-publish'
apply plugin: 'eclipse'

version = "${minecraft_version}-${mod_version}"
group = "com.aranaira.arcanearchives"
archivesBaseName = "arcanearchives"

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

configurations {
    shade
}

sourceSets.main.resources {
    srcDir 'src/generated/resources'
}

minecraft {
    mappings channel: 'snapshot', version: "${mcp_mappings}"

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            taskName 'runClient'

            workingDirectory project.file('run')

            //property 'forge.logging.markers', 'CORE,REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                arcanearchives {
                    source sourceSets.main
                }
            }
        }

        server {
            taskName 'runServer'

            workingDirectory project.file('run')

            //property 'forge.logging.markers', 'CORE,REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                arcanearchives {
                    source sourceSets.main
                }
            }
        }

        data {
            taskName 'runData'

            workingDirectory project.file('run')

            environment 'target', 'fmluserdevdata'

            //property 'forge.logging.markers', 'CORE,REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                arcanearchives {
                    source sourceSets.main
                }
            }

            args '--mod', 'arcanearchives', '--all', '--output', '"' + rootProject.file('src/generated/resources/') + '"',
                    '--existing', '"' + rootProject.file('src/main/resources') + '"'//, '--existing', '"' + rootProject.file('src/generated/resources') + '"'

        }
    }
}

repositories {
    maven {
        url "http://maven.tterrag.com/"
    }
    maven { // JEI
        url "http://dvs1.progwml6.com/files/maven"
    }
    maven {
        name = "Jared"
        url = "https://maven.blamejared.com"
    }
}

jar {
    manifest {
        attributes([
            "Specification-Title": "Arcane Archives Specification",
            "Specification-Vendor": "Arcane Archives Team",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"Arcane Archives Team",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}


dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    def registrate = "com.tterrag.registrate:Registrate:${registrate_version}"
    implementation fg.deobf(registrate)
    shade registrate

    def noobutil = "noobanidus.libs:noobutil:${minecraft_version}-${noobutil_version}"
    implementation fg.deobf(noobutil)
    shade noobutil
}

shadowJar {
    configurations = [project.configurations.shade]
    relocate 'com.tterrag.registrate', 'com.tterrag.registrate.repack_arcanearchives'
    relocate 'noobanidus.libs.noobutil', 'noobanids.libs.repack_arcanearchives.noobutil'
    classifier ''
}

jar.classifier = 'nodep'

reobf {
    shadowJar {}
}

build.dependsOn reobfShadowJar


